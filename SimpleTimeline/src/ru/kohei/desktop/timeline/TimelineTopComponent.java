/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ru.kohei.desktop.timeline;

import java.awt.CardLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.*;
import org.openide.util.Lookup;
import ru.kohei.timeline.api.TimelineController;
import ru.kohei.timeline.api.TimelineModel;
import ru.kohei.timeline.api.TimelineModelEvent;
import ru.kohei.timeline.api.TimelineModelListener;

/**
 *
 * @author Prostov Yury
 */
public class TimelineTopComponent extends JPanel implements TimelineModelListener {
        
    private transient TimelineController controller;
        
    public TimelineTopComponent() {
        initComponents();
        
        controller = Lookup.getDefault().lookup(TimelineController.class);
        controller.addListener(this);
        updateState();
        
        TimelineManipulator manipulator = (TimelineManipulator)timelineManipulator;
        manipulator.initialize(controller);
        
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                TimelineModel model = controller.getModel();
                TimelineDrawer drawer = (TimelineDrawer)timelineDrawer;
                drawer.setModel(model);
            }
        });
    }
    
    @Override
    public void timelineModelChanged(TimelineModelEvent event) {
        if ((event.getEventType() == TimelineModelEvent.EventType.MODEL_CHANGED) || 
            (event.getEventType() == TimelineModelEvent.EventType.BOUNDS_VALIDITY_CHANGED)) 
        {
            updateState();            
        }
        
        TimelineDrawer drawer = (TimelineDrawer)timelineDrawer;
        drawer.consumeEvent(event);
    }
    
    private void updateState() {
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                TimelineModel model = controller.getModel();
                boolean isModelEnabled = (model != null && model.hasValidBounds());
                if (isModelEnabled) {
                    CardLayout cardLayout = (CardLayout)topContainer.getLayout();
                    cardLayout.show(topContainer, "enabledPanel");
                }
                else {
                    CardLayout cardLayout = (CardLayout)topContainer.getLayout();
                    cardLayout.show(topContainer, "disabledPanel");
                }
                
                TimelineDrawer drawer = (TimelineDrawer)timelineDrawer;
                drawer.setModel(model);
            }
        });
    }    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        topContainer = new javax.swing.JPanel();
        disabledPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        enabledPanel = new javax.swing.JPanel();
        timelineDrawer = new TimelineDrawer();
        timelineManipulator = new TimelineManipulator();

        setMinimumSize(new java.awt.Dimension(414, 68));
        setPreferredSize(new java.awt.Dimension(414, 68));

        topContainer.setMinimumSize(new java.awt.Dimension(414, 68));
        topContainer.setPreferredSize(new java.awt.Dimension(414, 68));
        topContainer.setLayout(new java.awt.CardLayout());

        disabledPanel.setMinimumSize(new java.awt.Dimension(400, 60));
        disabledPanel.setPreferredSize(new java.awt.Dimension(400, 60));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(TimelineTopComponent.class, "TimelineTopComponent.jLabel2.text")); // NOI18N
        jLabel2.setEnabled(false);

        javax.swing.GroupLayout disabledPanelLayout = new javax.swing.GroupLayout(disabledPanel);
        disabledPanel.setLayout(disabledPanelLayout);
        disabledPanelLayout.setHorizontalGroup(
            disabledPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 543, Short.MAX_VALUE)
        );
        disabledPanelLayout.setVerticalGroup(
            disabledPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
        );

        topContainer.add(disabledPanel, "disabledPanel");

        enabledPanel.setMinimumSize(new java.awt.Dimension(414, 68));
        enabledPanel.setPreferredSize(new java.awt.Dimension(414, 68));
        enabledPanel.setLayout(new java.awt.GridBagLayout());

        timelineDrawer.setMinimumSize(new java.awt.Dimension(10, 10));
        timelineDrawer.setPreferredSize(new java.awt.Dimension(400, 60));

        /*

        javax.swing.GroupLayout timelineDrawerLayout = new javax.swing.GroupLayout(timelineDrawer);
        timelineDrawer.setLayout(timelineDrawerLayout);
        timelineDrawerLayout.setHorizontalGroup(
            timelineDrawerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 523, Short.MAX_VALUE)
        );
        timelineDrawerLayout.setVerticalGroup(
            timelineDrawerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 58, Short.MAX_VALUE)
        );

        */

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        enabledPanel.add(timelineDrawer, gridBagConstraints);

        timelineManipulator.setPreferredSize(new java.awt.Dimension(400, 60));

        /*

        javax.swing.GroupLayout timelineManipulatorLayout = new javax.swing.GroupLayout(timelineManipulator);
        timelineManipulator.setLayout(timelineManipulatorLayout);
        timelineManipulatorLayout.setHorizontalGroup(
            timelineManipulatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 543, Short.MAX_VALUE)
        );
        timelineManipulatorLayout.setVerticalGroup(
            timelineManipulatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        */

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        enabledPanel.add(timelineManipulator, gridBagConstraints);

        topContainer.add(enabledPanel, "enabledPanel");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(topContainer, javax.swing.GroupLayout.DEFAULT_SIZE, 543, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(topContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel disabledPanel;
    private javax.swing.JPanel enabledPanel;
    private javax.swing.JLabel jLabel2;
    private transient javax.swing.JPanel timelineDrawer;
    private transient javax.swing.JPanel timelineManipulator;
    private javax.swing.JPanel topContainer;
    // End of variables declaration//GEN-END:variables

}
